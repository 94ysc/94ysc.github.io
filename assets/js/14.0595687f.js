(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{339:function(t,a,s){"use strict";s.r(a);var r=s(3),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"如何保证数据幂等"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何保证数据幂等"}},[t._v("#")]),t._v(" 如何保证数据幂等")]),t._v(" "),s("h4",{attrs:{id:"新增"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#新增"}},[t._v("#")]),t._v(" 新增")]),t._v(" "),s("p",[t._v("对于创建订单服务来说，可以通过预先生成订单号，然后利用数据库中订单号的唯一约束这个特性，避免重复写入订单，实现创建订单服务的幂等性。")]),t._v(" "),s("h4",{attrs:{id:"修改"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#修改"}},[t._v("#")]),t._v(" 修改")]),t._v(" "),s("p",[t._v("对于更新订单服务，可以通过一个版本号机制，每次更新数据前校验版本号，更新数据同时自增版本号，这样的方式，来解决 ABA 问题，确保更新订单服务的幂等性。")]),t._v(" "),s("h4",{attrs:{id:"以往自己的实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#以往自己的实现"}},[t._v("#")]),t._v(" 以往自己的实现")]),t._v(" "),s("p",[t._v("记录请求参数进行hash存储到redis过期时间2~3秒,重复请求的hash一致,以保证幂等性")]),t._v(" "),s("h2",{attrs:{id:"elasticsearch-搜索提示"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#elasticsearch-搜索提示"}},[t._v("#")]),t._v(" Elasticsearch 搜索提示")]),t._v(" "),s("p",[t._v("es提供suggestion api支持前缀匹配,结合拼音分词可以实现拼音匹配中文")]),t._v(" "),s("h2",{attrs:{id:"mysql数据同步"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mysql数据同步"}},[t._v("#")]),t._v(" mysql数据同步")]),t._v(" "),s("p",[t._v("Canal 模拟mysql节点接受mysql binlog 然后分发到MQ,经过MQ发送到需要同步的模块")]),t._v(" "),s("comment-comment")],1)}),[],!1,null,null,null);a.default=e.exports}}]);